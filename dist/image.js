'use strict';

var boss_image ={"dirs":{"app":{"dirs":{"edit":{"dirs":{},"files":{"components.js":{"data":"'use strict';\n\nVue.component('unique-div', {\n    template: `<div></div>`,\n    props: ['app_number'],\n    mounted: function () {\n        this.$el.id = 'uid-' + this.app_number;\n    }\n});\n\nVue.component('editor-app', {\n    template: `<div class='editor-app'>\n                 <div id='toolbar'>\n                    <i class='fa fa-circle'  v-bind:class='{ dirty: changed, clean: !changed }' aria-hidden='true'></i>\n                    {{path + '/' + name}}\n                 </div>\n                 <unique-div :app_number='app_number' class='editor'></unique-div>\n\n                    <!-- save modal -->\n                    <div id=\"save-modal\" class=\"modal\">\n                        <div class=\"modal-overlay\"></div>\n                        <div class=\"modal-container modal-small\">\n                            <div class=\"modal-header\">\n                                <button v-on:click=\"toggleSave\" class=\"btn btn-clear float-right\"></button>\n                                <div class=\"modal-title\"><i class=\"fa fa-floppy-o\" aria-hidden=\"true\"></i>Save As</div>\n                            </div>\n                            <div class=\"modal-body\">\n                                <div class=\"content\">\n                                    <form>\n                                        <input v-model=\"name\"></input>\n                                        <button v-on:click=\"save\" class=\"btn\">[Save]</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n               </div>`,\n    props: ['path', 'filename', 'client', 'app_number'],\n    data: function () {\n        return {\n            changed: false,\n            name: this.filename\n        };\n    },\n    methods: {\n        toggleSave: function () {\n            $('#save-modal').toggleClass('active');\n        },\n        save: function () {\n            boss.lib.print.log('save file', this.client);\n            boss.fs.set_file(this.path, this.name, this.editor.getSession().getValue(), this.client.user);\n            this.changed = false;\n            $('#save-modal').toggleClass('active');\n        }\n    },\n    mounted: function () {\n        this.editor = ace.edit('uid-' + this.app_number);\n        this.editor.$blockScrolling = Infinity;\n        this.editor.setTheme('ace/theme/monokai');\n        this.editor.getSession().setMode('ace/mode/javascript');\n        this.editor.getSession().setValue(boss.fs.get_file(this.path, this.name));\n\n        //on save\n        $(this.$el).keydown(e => {\n            if (e.keyCode === 83 && e.ctrlKey && e.shiftKey) {\n                $('#save-modal').toggleClass('active');\n            }\n        });\n\n        this.editor.on('change', () => {\n            this.changed = true;\n        });\n    }\n});","owner":"root","created":1493583357519,"parent":"app"},"edit.js":{"data":"(function (args, client) {\n    'use strict';\n\n    var filename;\n    var path;\n\n    if (args.length > 1) {\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\n        path = result.path;\n        filename = result.name;\n    } else {\n        path = client.cwd;\n        var count = 1;\n        while (!filename) {\n            var attempt = 'untitled' + count;\n            try {\n                boss.fs.get_file(path, attempt);\n            } catch (err) {\n                //file doesn't exist nice!\n                filename = attempt;\n            }\n            count++;\n        }\n        boss.fs.set_file(path, filename, '', client.user);\n    }\n\n    if (filename) {\n\n        var counter = window.app_number++;\n        //load componenets\n        eval(boss.fs.get_file('/app/edit', 'components.js'));\n\n        var config = {\n            title: 'edit',\n            type: 'component',\n            componentName: 'editor-' + counter,\n            componentState: {}\n        };\n\n        window.layout.registerComponent('editor-' + counter, function (container, state) {\n            container.getElement().html('<div id=\"app-' + counter + '\" class=\"app\">' + '<editor-app :path=\"path\" :filename=\"filename\" :client=\"client\" :app_number=\"app_number\">' + '</editor-app>' + '</div>');\n        });\n\n        window.layout.root.contentItems[0].addChild(config);\n\n        var vm = new Vue({\n            el: '#app-' + counter,\n            data: {\n                path: path,\n                filename: filename,\n                client: client,\n                app_number: counter\n            }\n        });\n    } else if (!filename) {\n        boss.lib.print.error('error: no file argument', client);\n        client.flush();\n    }\n});","owner":"root","created":1493583357577,"parent":"app"},"edit.spec.js":{"data":"describe(\"edit app\", function () {\n\n  it(\"should have output\", function () {\n    //client.exec('edit /home/root/Documents/README.txt');\n    //expect(client.text).toBeDefined();\n  });\n});","owner":"root","created":1493583357592,"parent":"app"}},"name":"edit","parent":"app","ownner":"root","created":1493583357354},"shell":{"dirs":{},"files":{"components.js":{"data":"'use strict';\n//Vue Terminal component\n\nVue.component('shell', {\n    template: '<div class=\"shell\"></div>',\n    props: ['name', 'prompt', 'greeting'],\n    mounted: function () {\n        $(this.$el).terminal(this.$parent.client, {\n            greetings: this.greeting,\n            name: this.name,\n            prompt: this.prompt,\n            memory: true,\n            history: false,\n            completion: this.$parent.completion\n        });\n    }\n});","owner":"root","created":1493583357608,"parent":"app"},"shell.js":{"data":"(function (args, client) {\n    'use strict';\n\n    var counter = window.app_number++;\n    //load componenets\n    eval(boss.fs.get_file('/app/shell', 'components.js'));\n    var prompt = ': username$ ';\n    var config = {\n        title: 'shell',\n        type: 'component',\n        componentName: 'shell-' + counter,\n        componentState: {}\n    };\n\n    if (!client) {\n        client = new boss.lib.TerminalClient();\n        client.push(new boss.lib.Login(boss).username);\n        boss.lib.navbar.setClient(client);\n    } else {\n        var newClient = new boss.lib.TerminalClient();\n        newClient.user = client.user;\n        newClient.cwd = client.cwd;\n        newClient.interpreters = client.interpreters.slice(0);\n        var parts = newClient.cwd.split('/');\n        var dir = parts[parts.length - 1];\n        prompt = ': ' + dir + '$ ';\n        client = newClient;\n    }\n\n    window.layout.registerComponent('shell-' + counter, function (container, state) {\n        container.getElement().html('<div id=\"app-' + counter + '\" class=\"app\">' + '<shell :prompt=\"prompt\" :name=\"name\" :greeting=\"greeting\"></shell>' + '</div>');\n    });\n\n    window.layout.root.contentItems[0].addChild(config);\n\n    var vm = new Vue({\n        el: '#app-' + counter,\n        data: {\n            name: boss.fs.name,\n            prompt: boss.fs.name + prompt,\n            greeting: '[[b;aqua;]Welcome to BOSS. Please sign in as ][[b;fuchsia;]`guest`][[b;aqua;] if you are not a registered user]'\n        },\n        methods: {\n            client: client.exec,\n            completion: function (terminal, string, callback) {\n                var completions = Object.keys(boss.cmd);\n                completions = completions.concat(boss.fs.get_contents(client.cwd));\n                var parts = string.split('/');\n                parts.splice(-1, 1);\n                var str = parts.join('/');\n                var path = boss.lib.utils.calcAbsPath(str, null, client);\n                var subContents = boss.fs.get_contents(path);\n                subContents.forEach(function (content) {\n                    completions.push(str + '/' + content);\n                });\n                callback(completions);\n            }\n        }\n    });\n});","owner":"root","created":1493583357661,"parent":"app"},"shell.spec.js":{"data":"describe(\"shell app\", function () {\n\n  it(\"should have output\", function () {\n    //client.exec('shell');\n    //expect(client.text).toBeDefined();\n  });\n});","owner":"root","created":1493583357677,"parent":"app"}},"name":"shell","parent":"app","ownner":"root","created":1493583357592},"todo":{"dirs":{},"files":{"components.js":{"data":"'use strict';\n\nVue.component('todo-app', {\n    template: `<div class='todo-app'>\n                <button\n                    class=\"btn light-b\"\n                    v-on:click=\"addTodo()\"\n                    title=\"add todo\">\n                    [<i class=\"fa fa-plus\" style=\"margin-right: 3px;\" aria-hidden=\"true\"></i>Add Todo]\n                </button>\n                <div class=\"todo-container\">\n                    <div class=\"todos-title\">TODOS</div>\n                    <ul id=\"todos\">\n                        <p v-if=\"todos.length === 0\">You haven't created any TODOs yet. Come on, get started!</p>\n                        <li v-for=\"todo in todos\">\n                            <div class=\"btn-group\" style=\"float:left;\">\n                                <button \n                                    class=\"btn light-b\"\n                                    v-on:click=\"removeTodo(todo)\"\n                                    title=\"remove todo\">\n                                    [<i class=\"fa fa-check\" aria-hidden=\"true\"></i>|\n                                </button>\n                                <button\n                                    class=\"btn light-b\"\n                                    v-on:click=\"editTodo(todo)\"\n                                    title=\"edit todo\">\n                                    <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>]\n                                </button>\n                            </div>\n                            <pre class=\"todo-title\">{{ todo.text }}</pre>\n                            <div v-if=\"todo.editing\" class=\"edit-container dark-shadow\">\n                                <div class=\"add-new\">\n                                    <div class=\"add-new-title\">Edit Todo</div>\n                                    <form>\n                                        <div class=\"form-group container\">\n                                            <textarea v-model=\"todo.text\" placeholder=\"text\" cols=50 rows=5></textarea>\n                                           <button \n                                                class=\"btn blue-b\" \n                                                v-on:click=\"closeEdit(todo)\" \n                                                title=\"edit todo\">\n                                                [Save]\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n              </div>`,\n    methods: {\n        addTodo: function () {\n            this.todos.push({\n                text: 'task',\n                editing: true\n            });\n            this.save();\n        },\n        removeTodo: function (todo) {\n            let index = this.todos.indexOf(todo);\n            if (index >= 0) {\n                this.todos.splice(index, 1);\n            }\n            this.save();\n        },\n        editTodo: function (todo) {\n            todo.editing = true;\n        },\n        closeEdit: function (todo) {\n            todo.editing = false;\n            this.save();\n        },\n        save: function () {\n            boss.fs.set_file('/home/' + this.client.user.username + '/documents', 'todos.json', JSON.stringify(this.todos), client.user);\n        }\n    },\n    props: ['client'],\n    data: function () {\n        return {\n            todos: []\n        };\n    },\n    mounted: function () {\n        let json;\n        try {\n            json = boss.fs.get_file('/home/' + this.client.user.username + '/documents', 'todos.json');\n        } catch (err) {\n            json = \"[]\";\n            boss.fs.set_file('/home/' + this.client.user.username + '/documents', 'todos.json', json, client.user);\n        }\n        this.todos = JSON.parse(json);\n    }\n});","owner":"root","created":1493583357708,"parent":"app"},"todo.js":{"data":"(function (args, client) {\n    'use strict';\n\n    var counter = window.app_number++;\n    //load componenets\n    eval(boss.fs.get_file('/app/todo', 'components.js'));\n\n    var config = {\n        title: 'todo',\n        type: 'component',\n        componentName: 'todo-' + counter,\n        componentState: {}\n    };\n\n    window.layout.registerComponent('todo-' + counter, function (container, state) {\n        container.getElement().html('<div id=\"app-' + counter + '\" class=\"app\">' + '<todo-app :client=\"client\">' + '</todo-app>' + '</div>');\n    });\n\n    window.layout.root.contentItems[0].addChild(config);\n\n    var vm = new Vue({\n        el: '#app-' + counter,\n        data: {\n            client: client\n        }\n    });\n});","owner":"root","created":1493583357746,"parent":"app"}},"name":"todo","parent":"app","ownner":"root","created":1493583357677}},"files":{},"name":"app","parent":"root","ownner":"root","created":1493583357354},"cmd":{"dirs":{"about":{"dirs":{},"files":{"about.js":{"data":"(function (args, client) {\n    boss.lib.print.log(\"[[b;lime;] ___  ___  ___  ___ ]\", client);\n    boss.lib.print.log(\"[[b;lime;]| . >| . |\\/ __>\\/ __>]\", client);\n    boss.lib.print.log(\"[[b;lime;]| . \\\\| | |\\\\__ \\\\\\\\__ \\\\]\", client);\n    boss.lib.print.log(\"[[b;lime;]|___\\/`___'<___\\/<___\\/]\", client);\n    boss.lib.print.log(\"Browser Operating System Simulator - 0.0.5\", client);\n    boss.lib.print.log(\"Soong Research Labs -- Copyright 2017\", client);\n});","owner":"root","created":1493583357762,"parent":"cmd"},"about.spec.js":{"data":"describe(\"about command\", function () {\n\n  it(\"should have output\", function () {\n    client.exec('about');\n    expect(client.text).toBeDefined();\n    client.clear();\n  });\n});","owner":"root","created":1493583357762,"parent":"cmd"}},"name":"about","parent":"cmd","ownner":"root","created":1493583357746},"cd":{"dirs":{},"files":{"cd.js":{"data":"(function (args, client) {\n    if (args[1]) {\n        try {\n            var path = boss.lib.utils.calcAbsPath(args[1], null, client);\n            client.cwd = path;\n            var list = path.split('/');\n            boss.lib.set_prompt(list.length <= 1 ? '' : list[list.length - 1], client);\n        } catch (err) {\n            boss.lib.print.error('error : ' + err, client);\n        }\n    } else if (!args[1]) {\n        boss.lib.print.error('error: no directory argument', client);\n    }\n});","owner":"root","created":1493583357793,"parent":"cmd"},"cd.spec.js":{"data":"describe(\"adduser command\", function () {\n\n  it(\"change directory\", function () {\n    client.exec('cd Documents');\n    expect(client.cwd).toEqual('/home/test/Documents');\n    client.exec('cd /');\n    expect(client.cwd).toEqual('/');\n    client.exec('cd ~');\n    expect(client.cwd).toEqual('/home/test');\n    client.exec('cd ..');\n    expect(client.cwd).toEqual('/home');\n    client.exec('cd ./test');\n    expect(client.cwd).toEqual('/home/test');\n    client.exec('cd ~/Documents');\n    expect(client.cwd).toEqual('/home/test/Documents');\n  });\n});","owner":"root","created":1493583357808,"parent":"cmd"}},"name":"cd","parent":"cmd","ownner":"root","created":1493583357762},"cp":{"dirs":{},"files":{"cp.js":{"data":"(function (args, client) {\n\n    if (args.length > 1) {\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\n        var path = result.path;\n        var objectName = result.name;\n    }\n\n    if (args.length > 2) {\n        var result2 = boss.lib.utils.splitPathFilename(args[2], client);\n        var path2 = result2.path;\n        var objectName2 = result2.name;\n    }\n\n    if (objectName && boss.fs.get_files(path).indexOf(objectName) >= 0) {\n        try {\n            var data = boss.fs.get_file(path, objectName);\n            boss.fs.set_file(path2, objectName2, data, client.user);\n        } catch (err) {\n            boss.lib.print.error('error : ' + err, client);\n        }\n    } else if (objectName && boss.fs.get_dirs(path).indexOf(objectName) >= 0) {\n        try {\n            boss.fs.copy_dir(path, objectName, path2, objectName2, client.user);\n        } catch (err) {\n            boss.lib.print.error('error : ' + err, client);\n        }\n    } else if (!objectName) {\n        boss.lib.print.error('error: no object argument', client);\n    }\n});","owner":"root","created":1493583357846,"parent":"cmd"},"cp.spec.js":{"data":"describe(\"copy file/directory\", function () {\n\n  it(\"change directory\", function () {\n    //expect(boss.fs.get_file('home/test/Documents', 'README.txt')).toBeTruthy();\n    //client.exec('cp Documents/README.txt Documents/copy.txt');\n    //expect(boss.fs.get_file('/home/Documents', 'README.txt')).toEqual('/home/test/Documents');\n  });\n});","owner":"root","created":1493583357862,"parent":"cmd"}},"name":"cp","parent":"cmd","ownner":"root","created":1493583357808},"echo":{"dirs":{},"files":{"echo.js":{"data":"(function (args, client) {\n    boss.lib.print.log(args[1], client);\n});","owner":"root","created":1493583357877,"parent":"cmd"},"echo.spec.js":{"data":"describe(\"echo command\", function () {\n\n  it(\"should output string\", function () {\n    client.exec('echo test');\n    expect(client.text).toEqual('test');\n    client.clear();\n  });\n});","owner":"root","created":1493583357877,"parent":"cmd"}},"name":"echo","parent":"cmd","ownner":"root","created":1493583357862},"edit":{"dirs":{},"files":{"edit.js":{"data":"(function (args, client) {\n    boss.app.edit(args, client);\n});","owner":"root","created":1493583357893,"parent":"cmd"}},"name":"edit","parent":"cmd","ownner":"root","created":1493583357877},"exit":{"dirs":{},"files":{"exit.js":{"data":"(function (args, client) {\n    client.pop();\n});","owner":"root","created":1493583357893,"parent":"cmd"}},"name":"exit","parent":"cmd","ownner":"root","created":1493583357893},"export":{"dirs":{},"files":{"export.js":{"data":"(function (args, client) {\n\n    //this isn't working in firefox so let's just skip for now\n    // $('body').append(\"<a id='downloadAnchorElem' style='display:none'></a>\");\n    // var json = JSON.stringify(boss.fs.export());\n    // var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(json);\n    // var dlAnchorElem = document.getElementById('downloadAnchorElem');\n    // dlAnchorElem.setAttribute(\"href\",     dataStr     );\n    // dlAnchorElem.setAttribute(\"download\", \"boss.json\");\n    // dlAnchorElem.click();\n    // $('#downloadAnchorElem').remove();\n\n    //print to console for inspection\n    console.log(boss);\n});","owner":"root","created":1493583357938,"parent":"cmd"}},"name":"export","parent":"cmd","ownner":"root","created":1493583357893},"help":{"dirs":{},"files":{"help.js":{"data":"(function (args, client) {\n\n    var pad = function (string, pad, char) {\n        while (string.length < pad) {\n            string += char;\n        }\n        return string;\n    };\n\n    boss.lib.print.log(\"[[;Orange;]Shells Commands:]\", client);\n    boss.lib.print.log(\"[[;Yellow;]Navigation:]\", client);\n    boss.lib.print.log(pad('\\tcd ', 15, ' ') + \"Change Directory\", client);\n    boss.lib.print.log(pad('\\tcp ', 15, ' ') + \"Copy\", client);\n    boss.lib.print.log(pad('\\tmv ', 15, ' ') + \"Move\", client);\n    boss.lib.print.log(pad('\\tls ', 15, ' ') + \"List\", client);\n    boss.lib.print.log(pad('\\tmkdir ', 15, ' ') + \"Make Directory\", client);\n    boss.lib.print.log(pad('\\twrite ', 15, ' ') + \"Write to File\", client);\n    boss.lib.print.log(pad('\\tread ', 15, ' ') + \"Read File\", client);\n    boss.lib.print.log(pad('\\trm ', 15, ' ') + \"Remove\", client);\n\n    //boss.lib.print.log(\"[[;Yellow;]User:]\", client);\n    //boss.lib.print.log(pad('\\tadduser ', 15, ' ') + 'Create User', client);\n    //boss.lib.print.log(pad('\\trmuser ', 15, ' ') + 'Remove User', client);\n\n    boss.lib.print.log(\"[[;Orange;]Apps:]\", client);\n    boss.lib.print.log(\"\\tshell\", client);\n    boss.lib.print.log(\"\\tedit\", client);\n    boss.lib.print.log(\"\\techo\", client);\n    boss.lib.print.log(\"\\thttp\", client);\n    boss.lib.print.log(\"\\tjs\", client);\n\n    boss.lib.print.log(\"[[;Orange;]System:]\", client);\n    boss.lib.print.log(\"\\tabout\", client);\n    boss.lib.print.log(\"\\texport\", client);\n    boss.lib.print.log(\"\\texit\", client);\n    boss.lib.print.log(\"\\thelp\", client);\n});","owner":"root","created":1493583357966,"parent":"cmd"}},"name":"help","parent":"cmd","ownner":"root","created":1493583357938},"http":{"dirs":{},"files":{"http.js":{"data":"(function (args, client) {\n    $.get(args[1], function (data) {\n        boss.lib.print.log(JSON.stringify(data), client);\n    });\n});","owner":"root","created":1493583357982,"parent":"cmd"}},"name":"http","parent":"cmd","ownner":"root","created":1493583357966},"js":{"dirs":{},"files":{"js.js":{"data":"(function (args, client) {\n    if (args.length > 1) {\n        try {\n            boss.lib.print.log(eval(args[1]), client);\n        } catch (err) {\n            boss.lib.print.error('error : ' + err, client);\n        }\n    }\n});","owner":"root","created":1493583357998,"parent":"cmd"}},"name":"js","parent":"cmd","ownner":"root","created":1493583357982},"logout":{"dirs":{},"files":{"logout.js":{"data":"(function (args, client) {\n    boss.lib.set_prompt('username', client);\n    client.pop();\n});","owner":"root","created":1493583358013,"parent":"cmd"}},"name":"logout","parent":"cmd","ownner":"root","created":1493583357998},"ls":{"dirs":{},"files":{"ls.js":{"data":"(function (args, client) {\n    'use strict';\n\n    var str = '';\n    var path = boss.lib.utils.calcAbsPath(args[1], args, client);\n    var list = boss.fs.get_contents(path);\n    for (var i in list) {\n        str += list[i] + '\\n';\n    }\n    str = str.substring(0, str.length - 1);\n    boss.lib.print.log(str, client);\n});","owner":"root","created":1493583358030,"parent":"cmd"}},"name":"ls","parent":"cmd","ownner":"root","created":1493583358013},"mkdir":{"dirs":{},"files":{"mkdir.js":{"data":"(function (args, client) {\n\n    if (args.length > 1) {\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\n        var path = result.path;\n        var dirname = result.name;\n    }\n\n    if (dirname) {\n        try {\n            boss.fs.set_dir(path, dirname, client.user);\n        } catch (err) {\n            boss.lib.print.error('error : ' + err, client);\n        }\n    } else if (!dirname) {\n        boss.lib.print.error('error: no dir argument', client);\n    }\n});","owner":"root","created":1493583358046,"parent":"cmd"}},"name":"mkdir","parent":"cmd","ownner":"root","created":1493583358030},"mv":{"dirs":{},"files":{"mv.js":{"data":"(function (args, client) {\n\n    if (args.length > 1) {\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\n        var path = result.path;\n        var objectName = result.name;\n    }\n\n    if (args.length > 2) {\n        var result2 = boss.lib.utils.splitPathFilename(args[2], client);\n        var path2 = result2.path;\n        var objectName2 = result2.name;\n    }\n\n    if (objectName && boss.fs.get_files(path).indexOf(objectName) >= 0) {\n        try {\n            var data = boss.fs.get_file(path, objectName);\n            boss.fs.set_file(path2, objectName2, data, client.user);\n            boss.fs.remove(path, objectName, 'file', client.user);\n        } catch (err) {\n            boss.lib.print.error('error : ' + err, client);\n        }\n    } else if (objectName && boss.fs.get_dirs(path).indexOf(objectName) >= 0) {\n        try {\n            boss.fs.copy_dir(path, objectName, path2, objectName2, client.user);\n            boss.fs.remove(path, objectName, 'dir', client.user);\n        } catch (err) {\n            boss.lib.print.error('error : ' + err, client);\n        }\n    } else if (!objectName) {\n        boss.lib.print.error('error: no object argument', client);\n    }\n});","owner":"root","created":1493583358093,"parent":"cmd"}},"name":"mv","parent":"cmd","ownner":"root","created":1493583358046},"read":{"dirs":{},"files":{"read.js":{"data":"(function (args, client) {\n\n    if (args.length > 1) {\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\n        var path = result.path;\n        var filename = result.name;\n    }\n\n    if (filename) {\n        try {\n            boss.lib.print.log(boss.fs.get_file(path, filename), client);\n        } catch (err) {\n            boss.lib.print.error('error : ' + err, client);\n        }\n    } else if (!filename) {\n        boss.lib.print.error('error: no file argument', client);\n    }\n});","owner":"root","created":1493583358099,"parent":"cmd"}},"name":"read","parent":"cmd","ownner":"root","created":1493583358093},"reload":{"dirs":{},"files":{"reload.js":{"data":"(function (args, client) {\n    boss.reload();\n    boss.cmd.logout('', client);\n});","owner":"root","created":1493583358126,"parent":"cmd"}},"name":"reload","parent":"cmd","ownner":"root","created":1493583358099},"rm":{"dirs":{},"files":{"rm.js":{"data":"(function (args, client) {\n    if (args.length > 1) {\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\n        var path = result.path;\n        var name = result.name;\n    }\n\n    if (name) {\n        try {\n            boss.fs.remove(path, name, 'file', client.user);\n        } catch (err) {\n            //error('error : ' + err);\n        }\n        try {\n            boss.fs.remove(path, name, 'dir', client.user);\n        } catch (err) {\n            //error('error : ' + err);\n        }\n    } else if (!name) {\n        boss.lib.print.error('error: no file/dir argument', client);\n    }\n});","owner":"root","created":1493583358144,"parent":"cmd"}},"name":"rm","parent":"cmd","ownner":"root","created":1493583358126},"shell":{"dirs":{},"files":{"shell.js":{"data":"(function (args, client) {\n    'use strict';\n\n    boss.app.shell(args, client);\n});","owner":"root","created":1493583358148,"parent":"cmd"}},"name":"shell","parent":"cmd","ownner":"root","created":1493583358144},"todo":{"dirs":{},"files":{"todo.js":{"data":"(function (args, client) {\n    boss.app.todo(args, client);\n});","owner":"root","created":1493583358163,"parent":"cmd"}},"name":"todo","parent":"cmd","ownner":"root","created":1493583358148},"write":{"dirs":{},"files":{"write.js":{"data":"(function (args, client) {\n    if (args.length > 1) {\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\n        var path = result.path;\n        var filename = result.name;\n    }\n\n    if (filename) {\n        try {\n            var file = boss.fs.get_file(path, filename);\n            file = args[2] ? args[2] : '';\n        } catch (err) {\n            try {\n                boss.fs.set_file(path, filename, args[2] ? args[2] : '', client.user);\n            } catch (err) {\n                boss.lib.print.error('error : ' + err, client);\n            }\n        }\n    } else if (!filename) {\n        boss.lib.print.error('error: no file argument', client);\n    }\n});","owner":"root","created":1493583358179,"parent":"cmd"}},"name":"write","parent":"cmd","ownner":"root","created":1493583358163}},"files":{},"name":"cmd","parent":"root","ownner":"root","created":1493583357746},"etc":{"dirs":{},"files":{"component.js":{"data":"(function () {\n    'use strict';\n    //this binds the boss component to #boss element\n    //e.g. <div id=\"boss\"></div>\n    //why do we do this? So the user doesn't need\n    //to know anything about Vuejs and all view\n    //code and templates are in the image\n\n    //register boss component\n\n    Vue.component('boss', {\n        template: `<div>\n                    <header class=\"navbar\">\n                        <section class=\"navbar-section\">\n                            <a href=\"#\" v-on:click=\"toggleAbout\"><span><strong>&#931</strong></span></a>\n                            <div class=\"dropdown\">\n                                <a href=\"#\" v-on:click=\"update\" class=\"dropdown-toggle\" tabindex=\"0\">\n                                    Apps <i class=\"icon-caret\"></i>\n                                </a>\n                                <ul class=\"menu\">\n                                    <li v-for=\"app in getApps()\" class=\"menu-item\">\n                                        <a v-on:click=\"startApp(app)\" href=\"#\">[ {{app}} ]</a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </section>\n                         <section class=\"navbar-section\">\n                            <span>{{date}}</span>\n                        </section>\n                    </header>\n\n                    <div id=\"glayout\"></div>\n                    <!-- <div id=\"logo\">&#931</div> -->\n\n                    <!-- about modal -->\n                    <div id=\"about-modal\" class=\"modal\">\n                        <div class=\"modal-overlay\"></div>\n                        <div class=\"modal-container\">\n                            <div class=\"modal-header\">\n                                <div class=\"modal-title\">About Boss</div>\n                                <button v-on:click=\"toggleAbout\" class=\"btn btn-clear float-right\"></button>\n                            </div>\n                            <div class=\"modal-body\">\n                                <div class=\"content\">\n                                    <pre>Browser Operating System Simulator (BOSS) v0.0.5\nCopyright 2017 -- Soong Research Labs</pre>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                  </div>`,\n        data: function () {\n            return {\n                date: new Date().toLocaleDateString()\n            };\n        },\n        methods: {\n            toggleAbout: function () {\n                $('#about-modal').toggleClass('active');\n            },\n            startApp: function (app) {\n                boss.app[app]('', boss.lib.navbar.getClient());\n            },\n            getApps: function () {\n                return boss.navbar.apps;\n            },\n            update: function () {\n                this.$forceUpdate();\n            }\n        }\n    });\n\n    //register apps with navbar\n    boss.lib.navbar.setApps(Object.keys(boss.app));\n\n    //add the boss component\n    $('#boss').html('<boss></boss>');\n\n    //create vue instance\n    var vm = new Vue({\n        el: '#boss'\n    });\n});","owner":"root","created":1493583358227,"parent":"root"},"init.js":{"data":"(function () {\n    'use strict';\n\n    if (!window.app_number) {\n        window.app_number = 0;\n    }\n});","owner":"root","created":1493583358231,"parent":"root"},"layout.js":{"data":"(function () {\n    'use strict';\n\n    var layoutConfig = {\n        // settings:{\n        //     hasHeaders: true,\n        //     constrainDragToContainer: true,\n        //     reorderEnabled: true,\n        //     selectionEnabled: false,\n        //     popoutWholeStack: false,\n        //     blockedPopoutsThrowError: true,\n        //     closePopoutsOnUnload: true,\n        //     showPopoutIcon: true,\n        //     showMaximiseIcon: true,\n        //     showCloseIcon: true\n        // },\n        // dimensions: {\n        //     borderWidth: 5,\n        //     minItemHeight: 10,\n        //     minItemWidth: 10,\n        //     headerHeight: 20,\n        //     dragProxyWidth: 300,\n        //     dragProxyHeight: 200\n        // },\n        // labels: {\n        //     close: 'close',\n        //     maximise: 'maximise',\n        //     minimise: 'minimise',\n        //     popout: 'open in new window'\n        // },\n        content: [{\n            type: 'stack',\n            content: []\n        }]\n    };\n    if (!window.layout) {\n        window.layout = new GoldenLayout(layoutConfig, $('#glayout'));\n        window.layout.init();\n    }\n});","owner":"root","created":1493583358246,"parent":"root"}},"name":"etc","parent":"root","ownner":"root","created":1493583358179},"home":{"dirs":{"guest":{"dirs":{"app":{"dirs":{},"files":{"README.txt":{"data":"This directory is for apps. These are user apps that will be loaded after the user logs in.","owner":"root","created":1493583358262,"parent":"guest"}},"name":"app","parent":"guest","ownner":"root","created":1493583358246},"cmd":{"dirs":{},"files":{"README.txt":{"data":"This directory is for commands. These are user commands that will be loaded after the user logs in.","owner":"root","created":1493583358262,"parent":"guest"}},"name":"cmd","parent":"guest","ownner":"root","created":1493583358262},"documents":{"dirs":{},"files":{"README.txt":{"data":"This directory is for Documents.","owner":"root","created":1493583358280,"parent":"guest"}},"name":"documents","parent":"guest","ownner":"root","created":1493583358262}},"files":{},"name":"guest","parent":"home","ownner":"root","created":1493583358246},"root":{"dirs":{"app":{"dirs":{},"files":{"README.txt":{"data":"This directory is for apps. These are user apps that will be loaded after the user logs in.","owner":"root","created":1493583358284,"parent":"root"}},"name":"app","parent":"root","ownner":"root","created":1493583358280},"cmd":{"dirs":{},"files":{"README.txt":{"data":"This directory is for commands. These are user commands that will be loaded after the user logs in.","owner":"root","created":1493583358284,"parent":"root"}},"name":"cmd","parent":"root","ownner":"root","created":1493583358284},"documents":{"dirs":{},"files":{"README.txt":{"data":"This directory is for Documents.","owner":"root","created":1493583358288,"parent":"root"}},"name":"documents","parent":"root","ownner":"root","created":1493583358284}},"files":{},"name":"root","parent":"home","ownner":"root","created":1493583358280},"test":{"dirs":{"app":{"dirs":{},"files":{"README.txt":{"data":"This directory is for apps. These are user apps that will be loaded after the user logs in.","owner":"root","created":1493583358292,"parent":"test"}},"name":"app","parent":"test","ownner":"root","created":1493583358288},"cmd":{"dirs":{},"files":{"README.txt":{"data":"This directory is for commands. These are user commands that will be loaded after the user logs in.","owner":"root","created":1493583358292,"parent":"test"}},"name":"cmd","parent":"test","ownner":"root","created":1493583358292},"documents":{"dirs":{},"files":{"README.txt":{"data":"This directory is for Documents.","owner":"root","created":1493583358292,"parent":"test"}},"name":"documents","parent":"test","ownner":"root","created":1493583358292}},"files":{},"name":"test","parent":"home","ownner":"root","created":1493583358288}},"files":{},"name":"home","parent":"root","ownner":"root","created":1493583358246},"lib":{"dirs":{"CommandRunner":{"dirs":{},"files":{"CommandRunner.js":{"data":"(function (boss) {\n\n    var execute = function (args, command, client) {\n        if (boss.cmd[args[0]]) {\n            boss.cmd[args[0]](args, client);\n        } else if (args[0] != undefined) {\n            boss.lib.print.error('unknown command : ' + command, client);\n        }\n    };\n\n    var parseCommand = function (args, command, client) {\n        args.forEach(function (arg, index) {\n            if (/\\(.+\\)/.exec(arg)) {\n                var start = arg.indexOf('(');\n                var end = arg.lastIndexOf(')');\n                var cmd = [arg.slice(0, start)];\n                var newArgs = arg.slice(start + 1, end).split(' ');\n                newArgs = parseCommand(newArgs, cmd.join(' '), client);\n                cmd = cmd.concat(newArgs);\n                execute(cmd, command, client);\n                args[index] = client.text;\n                client.clear();\n            }\n        });\n        return args;\n    };\n\n    this.exec = (command, client) => {\n        if (command !== '') {\n            var args = command.split(' ');\n            args = parseCommand(args, command, client);\n            execute(args, command, client);\n            client.flush();\n        }\n    };\n});","owner":"root","created":1493583358359,"parent":"lib"}},"name":"CommandRunner","parent":"lib","ownner":"root","created":1493583358296},"event":{"dirs":{},"files":{"event.js":{"data":"({\n    'callbacks': [],\n    'subscribe': function (event, name, callback) {\n        if (!boss.lib.event.callbacks[event]) {\n            boss.lib.event.callbacks[event] = [];\n        }\n        boss.lib.event.callbacks[event].push({\n            id: name,\n            fn: callback\n        });\n    },\n    'send': function (event, data) {\n        if (boss.lib.event.callbacks[event]) {\n            boss.lib.event.callbacks[event].forEach(function (callback) {\n                callback.fn(data);\n            });\n        }\n    },\n    'unsubscribe': function (event, name) {\n        if (boss.lib.event.callbacks[event]) {\n            boss.lib.event.callbacks[event].forEach(function (callback) {\n                if (callback.id === name) {\n                    boss.lib.event.callbacks = boss.lib.event.callbacks.splice(callback, 1);\n                }\n            });\n        }\n    }\n});","owner":"root","created":1493583358387,"parent":"lib"}},"name":"event","parent":"lib","ownner":"root","created":1493583358359},"Login":{"dirs":{},"files":{"Login.js":{"data":"(function (boss) {\n    'use strict';\n\n    var username = false;\n\n    var login = function (client, user) {\n        client.user = user;\n        client.cwd = '/home/' + username;\n        client.set_mask(false);\n        boss.lib.set_prompt(username, client);\n        client.pop();\n        boss.reloadUser(username);\n        //register apps with navbar\n        boss.lib.navbar.setApps(Object.keys(boss.app));\n        client.push(new boss.lib.CommandRunner(boss).exec);\n        boss.cmd.about('', client);\n        boss.lib.print.log('Hello ' + username + '. Welcome to BOSS. Type [[;orange;]help] to see available commands.', client);\n        client.flush();\n    };\n\n    this.username = (command, client) => {\n        boss.lib.set_prompt('password', client);\n        username = command;\n        if (username === 'guest') {\n            var user = boss.fs.validate_user(username, boss.lib.utils.hashCode('pass'));\n            login(client, user);\n        } else {\n            client.set_mask('*');\n            client.push(this.password);\n        }\n    };\n\n    this.password = (command, client) => {\n        var user = boss.fs.validate_user(username, boss.lib.utils.hashCode(command));\n        if (user) {\n            login(client, user);\n        } else {\n            boss.lib.print.error('unknown username/password combination', client);\n            boss.lib.set_prompt('username', client);\n            client.set_mask(false);\n            client.pop();\n        }\n        client.flush();\n    };\n});","owner":"root","created":1493583358426,"parent":"lib"}},"name":"Login","parent":"lib","ownner":"root","created":1493583358387},"navbar":{"dirs":{},"files":{"navbar.js":{"data":"({\n    //This is a hack so the navbar has access\n    //to a client and maybe set other stuff. \n    //Not really true to the boss has no state philosophy.\n    'getClient': function () {\n        return boss.navbar.client;\n    },\n    'setClient': function (client) {\n        if (!boss.navbar) {\n            boss.navbar = {};\n        }\n        boss.navbar.client = client;\n    },\n    'setApps': function (apps) {\n        if (!boss.navbar) {\n            boss.navbar = {};\n        }\n        boss.navbar.apps = apps;\n    },\n    'getApps': function () {\n        return boss.navbar.apps;\n    }\n});","owner":"root","created":1493583358451,"parent":"lib"}},"name":"navbar","parent":"lib","ownner":"root","created":1493583358427},"print":{"dirs":{},"files":{"print.js":{"data":"({\n    'log': function (txt, client) {\n        client.out(txt);\n    },\n    'error': function (txt, client) {\n        client.out('[[;Red;]' + txt + ']');\n    }\n});","owner":"root","created":1493583358479,"parent":"lib"}},"name":"print","parent":"lib","ownner":"root","created":1493583358451},"set_prompt":{"dirs":{},"files":{"set_prompt.js":{"data":"(function (txt, client) {\n    client.set_prompt(boss.fs.name + ': ' + txt + '$ ');\n});","owner":"root","created":1493583358491,"parent":"lib"}},"name":"set_prompt","parent":"lib","ownner":"root","created":1493583358479},"TerminalClient":{"dirs":{},"files":{"TerminalClient.js":{"data":"(function () {\n    'use strict';\n\n    var terminal;\n\n    this.interpreters = [];\n    this.user;\n\n    this.push = function (fn) {\n        this.interpreters.push(fn);\n    };\n\n    this.pop = function () {\n        this.interpreters.pop();\n    };\n\n    this.text = null;\n\n    this.out = text => {\n        this.text = this.text ? this.text + \"\\n\" + text : text;\n    };\n\n    this.flush = () => {\n        terminal.echo(this.text);\n        this.clear();\n    };\n\n    this.clear = () => {\n        this.text = null;\n    };\n\n    this.set_prompt = function (prompt) {\n        terminal.set_prompt(prompt);\n    };\n\n    this.get_prompt = function (prompt) {\n        return terminal.get_prompt();\n    };\n\n    this.set_mask = function (boolOrChar) {\n        terminal.set_mask(boolOrChar);\n    };\n\n    this.update = function (line, text) {\n        terminal.update(line, text);\n    };\n\n    this.exec = (command, term) => {\n        terminal = term;\n        this.interpreters[this.interpreters.length - 1](command, this);\n    };\n});","owner":"root","created":1493583358535,"parent":"lib"}},"name":"TerminalClient","parent":"lib","ownner":"root","created":1493583358491},"utils":{"dirs":{},"files":{"utils.js":{"data":"({\n    calcAbsPath: (arg, args, client) => {\n        var path = client.cwd;\n        if (arg && arg.startsWith('/')) {\n            path = arg;\n        } else if (arg && arg.startsWith('~')) {\n            path = '/home/' + client.user.username + arg.slice(1);\n        } else if (arg && arg === '..') {\n            var parts = path.split('/');\n            parts = parts.slice(0, parts.length - 1);\n            path = parts.join('/');\n        } else if (arg && arg.startsWith('.')) {\n            path += arg.slice(1);\n        } else if (args && args.length >= 2 && args[1]) {\n            path += '/' + arg;\n        } else if (!args) {\n            path += '/' + arg;\n        }\n        return path;\n    },\n    splitPathFilename: (full, client) => {\n        var path = client.cwd;\n        var name = full;\n        var parts = full.split('/');\n        if (parts.length > 1) {\n            name = parts.pop();\n            path = boss.lib.utils.calcAbsPath(parts.join('/'), null, client);\n        }\n        return {\n            path: path,\n            name: name\n        };\n    },\n    //credit: http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n    hashCode: string => {\n        var hash = 0;\n        if (string.length == 0) {\n            return hash;\n        }\n\n        for (var i = 0; i < string.length; i++) {\n            var char = string.charCodeAt(i);\n            var hash = (hash << 5) - hash + char;\n            hash = hash & hash; // Convert to 32bit integer\n        }\n        return hash;\n    }\n});","owner":"root","created":1493583358583,"parent":"lib"}},"name":"utils","parent":"lib","ownner":"root","created":1493583358535}},"files":{},"name":"lib","parent":"root","ownner":"root","created":1493583358296},"sys":{"dirs":{},"files":{"FileSystem.js":{"data":"(function FileSystem(root, name, env) {\n    'use strict';\n\n    //SYSTEM NAME\n\n    this.name = name;\n\n    //VARS\n    var _root = root;\n    _root.users = JSON.parse(_root.dirs['var'].files[env + '-users.json'].data);\n\n    //CLASSES\n    this.Dir = function (name, owner, parent) {\n        this.name = name;\n        this.owner = owner;\n        this.parent = parent;\n        this.created = Date.now();\n        this.dirs = {};\n        this.files = {};\n    };\n\n    this.File = function (owner, data, meta) {\n        this.owner = owner;\n        this.created = Date.now();\n        this.data = data;\n        this.meta = meta;\n    };\n\n    this.User = function (username, type, password) {\n        this.username = username;\n        this.type = type;\n        this.password = password;\n    };\n\n    //FUNCTIONS\n    var get_dir = path => {\n        var parts = path.split('/');\n        var directory = _root;\n\n        for (var i = 1; i < parts.length; i++) {\n            if (parts[i] !== '') {\n                directory = directory.dirs[parts[i]];\n            }\n        }\n        return directory;\n    };\n\n    /**\r\n     * The fileSystem permissions system is very simple.\r\n     * If, you are a root user you can do anything. If you\r\n     * are a regular user you can read all files (it's js so\r\n     * really this can't be hidden so why fake it) but can't\r\n     * write on other users files/dirs\r\n     */\n    var validate = (object, user) => {\n        if (user.type !== 'root' && user.username !== object.owner && !this.validate_user(user.username, user.password)) {\n            throw Error('You are not permitted to execute this action');\n        }\n    };\n\n    //METHODS\n    this.get_file = (path, filename) => {\n        if (get_dir(path).files[filename]) {\n            var file = get_dir(path).files[filename];\n            return get_dir(path).files[filename].data;\n        } else {\n            throw filename + 'does not exist';\n        }\n    };\n\n    this.set_file = (path, filename, data, user) => {\n        var dir = get_dir(path);\n        validate(dir, user);\n        dir.files[filename] = new this.File(this.get_current_username, data, null);\n        boss.lib.event.send('save', _root);\n    };\n\n    this.set_dir = (path, dirname, user) => {\n        if (!get_dir(path).dirs[dirname]) {\n            var dir = get_dir(path);\n            validate(dir, user);\n            dir.dirs[dirname] = new this.Dir(dirname, user ? user.username : this.get_current_username(), path);\n            boss.lib.event.send('save', _root);\n        } else {\n            throw 'dir already exists';\n        }\n    };\n\n    this.copy_dir = (path1, dirname1, path2, dirname2, user) => {\n        if (!get_dir(path2).dirs[dirname2]) {\n            var dir = get_dir(path2);\n            validate(dir, user);\n            dir.dirs[dirname2] = get_dir(path1 + '/' + dirname1);\n            boss.lib.event.send('save', _root);\n        } else {\n            throw 'dir already exists';\n        }\n    };\n\n    this.remove = (path, name, type, user) => {\n        if (type === 'file' && get_dir(path).files[name]) {\n            var dir = get_dir(path);\n            validate(dir, user);\n            delete dir.files[name];\n        } else if (type === 'dir' && get_dir(path).dirs[name]) {\n            var dir = get_dir(path);\n            validate(dir, user);\n            delete dir.dirs[name];\n        } else {\n            throw 'error : does not exist';\n        }\n    };\n\n    //get directory and file listing\n    this.get_contents = path => {\n        var directory = get_dir(path);\n        var dirs = directory.dirs;\n        var files = directory.files;\n        return Object.keys(dirs).concat(Object.keys(files));\n    };\n\n    //get file listing\n    this.get_files = path => {\n        var directory = get_dir(path);\n        var files = directory.files;\n        return Object.keys(files);\n    };\n\n    //get dir listing\n    this.get_dirs = path => {\n        var directory = get_dir(path);\n        var dirs = directory.dirs;\n        return Object.keys(dirs);\n    };\n\n    //USER\n    this.add_user = (key, user) => {\n        _root.users[key] = user;\n        this.set_dir('/home', key, user);\n        boss.lib.event.send('save', _root);\n    };\n\n    this.remove_user = (key, user) => {\n        //TODO\n    };\n\n    this.validate_user = (name, pass) => {\n        if (_root.users[name] && _root.users[name].password == pass) {\n            return _root.users[name];\n        }\n        return false;\n    };\n\n    //return root\n    this.export = () => {\n        return _root;\n    };\n});","owner":"root","created":1493583358719,"parent":"root"}},"name":"sys","parent":"root","ownner":"root","created":1493583358583},"var":{"dirs":{},"files":{"prod-users.json":{"data":"{\r\n    \"root\": {\r\n        \"username\":\"root\",\"type\":\"root\",\"password\":\"3433489\"\r\n    },\r\n    \"guest\":{\r\n        \"username\":\"guest\",\"type\":\"user\",\"password\":\"3433489\"\r\n    }\r\n}","owner":"root","created":1493583358731,"parent":"root"},"test-users.json":{"data":"{\"test\":{\"username\":\"test\",\"type\":\"root\",\"password\":\"3556498\"}}","owner":"root","created":1493583358735,"parent":"root"}},"name":"var","parent":"root","ownner":"root","created":1493583358720}},"files":{},"name":"root","parent":null,"ownner":"root","created":1493583357354}

try{
	module.exports = JSON_IMAGE;
} catch(err){
	//do nothing, assuming the file is being run in a browser
}