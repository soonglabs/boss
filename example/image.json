{"dirs":{"app":{"dirs":{"edit":{"dirs":{},"files":{"components.js":{"data":"'use strict';\r\n\r\nVue.component('unique-div', {\r\n    template: `<div></div>`,\r\n    props: ['app_number'],\r\n    mounted: function(){\r\n        this.$el.id = 'uid-' + this.app_number;\r\n    }\r\n});\r\n\r\nVue.component('editor-app', {\r\n    template: `<div class='editor-app'>\r\n                 <div id='toolbar'>\r\n                    <i class='fa fa-circle'  v-bind:class='{ dirty: changed, clean: !changed }' aria-hidden='true'></i>\r\n                    {{filename}}\r\n                 </div>\r\n                 <unique-div :app_number='app_number' class='editor'></unique-div>\r\n               </div>`,\r\n    props: ['path', 'filename', 'client', 'app_number'],\r\n    data: function(){ \r\n        return {\r\n            changed: false\r\n        }\r\n    },\r\n    mounted: function(){\r\n        this.editor = ace.edit('uid-' + this.app_number);\r\n        this.editor.$blockScrolling = Infinity;\r\n        this.editor.setTheme('ace/theme/monokai');\r\n        this.editor.getSession().setMode('ace/mode/javascript');\r\n        this.editor.getSession().setValue(boss.fs.get_file(this.path,this.filename));\r\n\r\n        //on save\r\n        $(this.$el).keydown((e) => {\r\n            if(e.keyCode === 83 && e.ctrlKey && e.shiftKey){\r\n                boss.fs.set_file(this.path, this.filename, this.editor.getSession().getValue(), this.client.user);\r\n                this.changed = false;\r\n            }\r\n        });\r\n\r\n        this.editor.on('change', () => {\r\n            this.changed = true;\r\n        });\r\n    }\r\n});","owner":"root","created":1480795177917,"parent":"app"},"edit.js":{"data":"(function(args, client){\r\n    'use strict';\r\n\r\n    var filename;\r\n    var path;\r\n\r\n    if(args.length > 1){\r\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\r\n        path = result.path;\r\n        filename = result.name;\r\n    }\r\n\r\n    if(filename){\r\n\r\n        var counter = boss.app_number++;\r\n        //load componenets\r\n        eval(boss.fs.get_file('/app/edit', 'components.js'));\r\n\r\n        var config = {\r\n            title: 'edit',\r\n            type: 'component',\r\n            componentName: 'editor-' + counter,\r\n            componentState: {}\r\n        };\r\n\r\n        boss.layout.registerComponent('editor-' + counter, function( container, state ){\r\n            container.getElement().html(\r\n                '<div id=\"app-' + counter + '\" class=\"app\">' +\r\n                    '<editor-app :path=\"path\" :filename=\"filename\" :client=\"client\" :app_number=\"app_number\">' +\r\n                    '</editor-app>' +\r\n                '</div>'\r\n            );\r\n        });\r\n\r\n        boss.layout.root.contentItems[0].addChild(config);\r\n\r\n        var vm = new Vue({\r\n            el: '#app-' + counter,\r\n            data: {\r\n                path: path,\r\n                filename: filename,\r\n                client: client,\r\n                app_number: counter\r\n            }\r\n        });\r\n\r\n    } else if(!filename) {\r\n        boss.lib.print.error('error: no file argument', client);\r\n        client.flush();\r\n    }\r\n});","owner":"root","created":1480795177917,"parent":"app"},"edit.spec.js":{"data":"describe(\"edit app\", function() {\r\n\r\n  it(\"should have output\", function() {\r\n    //client.exec('edit /home/root/Documents/README.txt');\r\n    //expect(client.text).toBeDefined();\r\n  });\r\n});","owner":"root","created":1480795177917,"parent":"app"}},"name":"edit","parent":"app","owner":"root","created":1480795177916},"shell":{"dirs":{},"files":{"components.js":{"data":"'use strict';\r\n//Vue Terminal component\r\nVue.component('shell', {\r\n    template: '<div class=\"shell\"></div>',\r\n    props: ['name', 'prompt', 'greeting'],\r\n    mounted: function(){\r\n        $(this.$el).terminal(this.$parent.client, {\r\n            greetings: this.greeting,\r\n            name: this.name,\r\n            prompt: this.prompt,\r\n            memory: true,\r\n            history: false,\r\n            completion: this.$parent.completion\r\n        });\r\n    }\r\n});","owner":"root","created":1480795177918,"parent":"app"},"shell.js":{"data":"(function(args, client){\r\n    'use strict';\r\n    var counter = boss.app_number++;\r\n    //load componenets\r\n    eval(boss.fs.get_file('/app/shell', 'components.js'));\r\n    var prompt = ': username$ ';\r\n    var config = {\r\n        title: 'shell',\r\n        type: 'component',\r\n        componentName: 'shell-' + counter,\r\n        componentState: {}\r\n    };\r\n\r\n    if(!client){\r\n        client = new boss.lib.TerminalClient(boss);\r\n    } else {\r\n        var newClient = new boss.lib.TerminalClient(boss);\r\n        newClient.user = client.user;\r\n        newClient.cwd = client.cwd;\r\n        var parts = newClient.cwd.split('/');\r\n        var dir = parts[parts.length - 1];\r\n        prompt = ': ' + dir + '$ ';\r\n        client = newClient;\r\n    }\r\n\r\n    boss.layout.registerComponent('shell-' + counter, function(container, state){\r\n        container.getElement().html('<div id=\"app-' + counter + '\" class=\"app\">' +\r\n                                        '<shell :prompt=\"prompt\" :name=\"name\" :greeting=\"greeting\"></shell>' +\r\n                                    '</div>');\r\n    });\r\n\r\n    boss.layout.root.contentItems[0].addChild(config);\r\n\r\n    var vm = new Vue({\r\n        el: '#app-' + counter,\r\n        data: {\r\n            name:  boss.fs.name,\r\n            prompt: boss.fs.name + prompt,\r\n            greeting: null\r\n        },\r\n        methods: {\r\n            client: client.exec,\r\n            completion: function(terminal, string, callback){\r\n                var completions = Object.keys(boss.cmd);\r\n                completions = completions.concat(boss.fs.get_contents(client.cwd));\r\n                var parts = string.split('/');\r\n                parts.splice(-1, 1);\r\n                var str = parts.join('/');\r\n                var path = boss.lib.utils.calcAbsPath(str, null, client);\r\n                var subContents = boss.fs.get_contents(path);\r\n                subContents.forEach(function(content){\r\n                    completions.push(str + '/' + content);\r\n                });\r\n                callback(completions);\r\n            }\r\n        }\r\n    });\r\n});","owner":"root","created":1480795177918,"parent":"app"},"shell.spec.js":{"data":"describe(\"shell app\", function() {\r\n\r\n  it(\"should have output\", function() {\r\n    //client.exec('shell');\r\n    //expect(client.text).toBeDefined();\r\n  });\r\n});","owner":"root","created":1480795177919,"parent":"app"}},"name":"shell","parent":"app","owner":"root","created":1480795177917}},"files":{},"name":"app","parent":"root","owner":"root","created":1480795177915},"cmd":{"dirs":{"about":{"dirs":{},"files":{"about.js":{"data":"(function(args, client){\r\n    boss.lib.print.log(\"[[;green;] ___  ___  ___  ___ ]\", client);\r\n    boss.lib.print.log(\"[[;green;]| . >| . |\\/ __>\\/ __>]\", client);\r\n    boss.lib.print.log(\"[[;green;]| . \\\\| | |\\\\__ \\\\\\\\__ \\\\]\", client);\r\n    boss.lib.print.log(\"[[;green;]|___\\/`___'<___\\/<___\\/]\", client);\r\n    boss.lib.print.log(\"Browser Operating System Simulator - 0.0.1\", client);\r\n    boss.lib.print.log(\"created by Scott Russell\", client);\r\n    boss.lib.print.log(\"copyright 2016\", client);\r\n});","owner":"root","created":1480795177919,"parent":"cmd"},"about.spec.js":{"data":"describe(\"about command\", function() {\r\n\r\n  it(\"should have output\", function() {\r\n    client.exec('about');\r\n    expect(client.text).toBeDefined();\r\n    client.clear();\r\n  });\r\n});","owner":"root","created":1480795177920,"parent":"cmd"}},"name":"about","parent":"cmd","owner":"root","created":1480795177919},"adduser":{"dirs":{},"files":{"adduser.js":{"data":"(function(args, client){\r\n    if(args.length < 4){\r\n        boss.lib.print.error('error: not enough arguments', client);\r\n    } else if(args[2] !== 'root' && args[2] !== 'user') {\r\n        boss.lib.print.error('error : invalid type ' + args[2], client);\r\n    } else {\r\n        boss.fs.add_user(args[1], new boss.fs.User(args[1], args[2], boss.lib.utils.hashCode(args[3])));\r\n    }\r\n})","owner":"root","created":1480795177920,"parent":"cmd"},"adduser.spec.js":{"data":"describe(\"adduser command\", function() {\r\n\r\n  it(\"should add user\", function() {\r\n    client.exec('adduser steve root password');\r\n    expect(boss.fs.validate_user('steve', boss.lib.utils.hashCode('password'))).toBeTruthy();\r\n  });\r\n});","owner":"root","created":1480795177921,"parent":"cmd"}},"name":"adduser","parent":"cmd","owner":"root","created":1480795177920},"cd":{"dirs":{},"files":{"cd.js":{"data":"(function(args, client){\r\n    if(args[1]){\r\n        try{\r\n            var path = boss.lib.utils.calcAbsPath(args[1], null, client);\r\n           client.cwd = path;\r\n            var list = path.split('/');\r\n            boss.lib.set_prompt((list.length <= 1 ? '' : list[list.length - 1]), client);\r\n        } catch(err){\r\n            boss.lib.print.error('error : ' + err, client);\r\n        }\r\n    } else if(!args[1]){\r\n        boss.lib.print.error('error: no directory argument', client);\r\n    }\r\n})","owner":"root","created":1480795177921,"parent":"cmd"}},"name":"cd","parent":"cmd","owner":"root","created":1480795177921},"cp":{"dirs":{},"files":{"cp.js":{"data":"(function(args, client){\r\n    if(args.length > 1){\r\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\r\n        var path = result.path;var filename = result.name;\r\n    }\r\n\r\n    if(args.length > 2){\r\n        var result2 = boss.lib.utils.splitPathFilename(args[2], client);\r\n        var path2 = result2.path;var filename2 = result2.name;\r\n    }\r\n\r\n    if(filename){\r\n        try{\r\n            var data = boss.fs.get_file(path, filename);\r\n            boss.fs.set_file(path2, filename2, data, client.user);\r\n        } catch(err){\r\n            boss.lib.print.error('error : ' + err, client);\r\n        }\r\n    } else if(!filename) {\r\n        boss.lib.print.error('error: no file argument', client);\r\n    }\r\n});","owner":"root","created":1480795177922,"parent":"cmd"}},"name":"cp","parent":"cmd","owner":"root","created":1480795177921},"echo":{"dirs":{},"files":{"echo.js":{"data":"(function(args, client){\r\n    boss.lib.print.log(args[1], client);\r\n})","owner":"root","created":1480795177922,"parent":"cmd"}},"name":"echo","parent":"cmd","owner":"root","created":1480795177922},"edit":{"dirs":{},"files":{"edit.js":{"data":"(function(args, client){\r\n    boss.app.edit(args, client);\r\n});","owner":"root","created":1480795177923,"parent":"cmd"}},"name":"edit","parent":"cmd","owner":"root","created":1480795177922},"exit":{"dirs":{},"files":{"exit.js":{"data":"(function(args, client){\n    boss.lib.pop();\n});","owner":"root","created":1480795177924,"parent":"cmd"}},"name":"exit","parent":"cmd","owner":"root","created":1480795177923},"export":{"dirs":{},"files":{"export.js":{"data":"(function(args, client){\n\n    $('body').append(\"<a id='downloadAnchorElem' style='display:none'></a>\");\n    var json = JSON.stringify(boss.fs.export());\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(json);\n    var dlAnchorElem = document.getElementById('downloadAnchorElem');\n    dlAnchorElem.setAttribute(\"href\",     dataStr     );\n    dlAnchorElem.setAttribute(\"download\", \"boss.json\");\n    dlAnchorElem.click();\n    $('#downloadAnchorElem').remove();\n\n    //print to console for inspection\n    console.log(boss);\n});","owner":"root","created":1480795177925,"parent":"cmd"}},"name":"export","parent":"cmd","owner":"root","created":1480795177924},"help":{"dirs":{},"files":{"help.js":{"data":"(function(args, client){\r\n\r\n    var pad = function (string, pad, char) {\r\n        while(string.length < pad){\r\n            string += char;\r\n        }\r\n        return string;\r\n    };\r\n\r\n    boss.lib.print.log(\"[[;Orange;]Shells Commands:]\", client);\r\n    boss.lib.print.log(\"[[;Yellow;]Navigation:]\", client);\r\n    boss.lib.print.log(pad('\\tcd ', 15, ' ') + \"Change Directory\", client);\r\n    boss.lib.print.log(pad('\\tcp ', 15, ' ') + \"Copy\", client);\r\n    boss.lib.print.log(pad('\\tmv ', 15, ' ') + \"Move\", client);\r\n    boss.lib.print.log(pad('\\tls ', 15, ' ') + \"List\", client);\r\n    boss.lib.print.log(pad('\\tmkdir ', 15, ' ') + \"Make Directory\", client);\r\n    boss.lib.print.log(pad('\\twrite ', 15, ' ') + \"Write to File\", client);\r\n    boss.lib.print.log(pad('\\tread ', 15, ' ') + \"Read File\", client);\r\n    boss.lib.print.log(pad('\\trm ', 15, ' ') + \"Remove\", client);\r\n\r\n    boss.lib.print.log(\"[[;Yellow;]User:]\", client);\r\n    boss.lib.print.log(pad('\\tadduser ', 15, ' ') + 'Create User', client);\r\n    boss.lib.print.log(pad('\\trmuser ', 15, ' ') + 'Remove User', client);\r\n\r\n    boss.lib.print.log(\"[[;Orange;]Apps:]\", client);\r\n    boss.lib.print.log(\"\\tshell\", client);\r\n    boss.lib.print.log(\"\\tedit\", client);\r\n    boss.lib.print.log(\"\\techo\", client);\r\n    boss.lib.print.log(\"\\thttp\", client);\r\n    boss.lib.print.log(\"\\tjs\", client);\r\n\r\n    boss.lib.print.log(\"[[;Orange;]System:]\", client);\r\n    boss.lib.print.log(\"\\tabout\", client);\r\n    boss.lib.print.log(\"\\texport\", client);\r\n    boss.lib.print.log(\"\\texit\", client);\r\n    boss.lib.print.log(\"\\thelp\", client);\r\n});","owner":"root","created":1480795177926,"parent":"cmd"}},"name":"help","parent":"cmd","owner":"root","created":1480795177925},"http":{"dirs":{},"files":{"http.js":{"data":"(function(args, client){\r\n    $.get(args[1], function( data ) {\r\n        boss.lib.print.log(JSON.stringify(data), client);\r\n    });\r\n});","owner":"root","created":1480795177926,"parent":"cmd"}},"name":"http","parent":"cmd","owner":"root","created":1480795177926},"js":{"dirs":{},"files":{"js.js":{"data":"(function(args, client){\n\n    if(args.length > 1){\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\n        var path = result.path;\n        var name = result.name;\n    }if(name){\n        try{\n            boss.lib.print.log(eval(boss.fs.get_file(path, name)), client);\n        } catch(err){\n            boss.lib.print.error('error : ' + err, client);\n        }\n    } else if(!name) {\n        boss.lib.print.error('error: no file argument', client);\n    }\n})","owner":"root","created":1480795177927,"parent":"cmd"}},"name":"js","parent":"cmd","owner":"root","created":1480795177927},"ls":{"dirs":{},"files":{"ls.js":{"data":"(function(args, client){\n    'use strict';\n    var str = '';\n    var path = boss.lib.utils.calcAbsPath(args[1], args, client);\n    var list = boss.fs.get_contents(path);\n    for(var i in list){\n        str += list[i] + '\\n';\n    }\n    str = str.substring(0, str.length-1);\n    boss.lib.print.log(str, client);\n});","owner":"root","created":1480795177927,"parent":"cmd"}},"name":"ls","parent":"cmd","owner":"root","created":1480795177927},"mkdir":{"dirs":{},"files":{"mkdir.js":{"data":"(function(args, client){\r\n\r\n    if(args.length > 1){\r\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\r\n        var path = result.path;\r\n        var dirname = result.name;\r\n    }\r\n\r\n    if(dirname){\r\n        try{\r\n            boss.fs.set_dir(path, dirname, client.user);\r\n        } catch(err){\r\n            boss.lib.print.error('error : ' + err, client);\r\n        }\r\n    } else if(!dirname) {\r\n        boss.lib.print.error('error: no dir argument', client);\r\n    }\r\n});","owner":"root","created":1480795177928,"parent":"cmd"}},"name":"mkdir","parent":"cmd","owner":"root","created":1480795177928},"mv":{"dirs":{},"files":{"mv.js":{"data":"(function(args, client){\n    if(args.length > 1){\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\n        var path = result.path;\n        var filename = result.name;\n    }if(args.length > 2){\n        var result2 = boss.lib.utils.splitPathFilename(args[2], client);\n        var path2 = result2.path;\n        var filename2 = result2.name;\n    }if(filename){\n        try{\n            var data = boss.fs.get_file(path, filename);\n            boss.fs.set_file(path2, filename2, data, client.user);\n            boss.fs.remove(path, filename, 'file', client.user);\n        } catch(err){\n                boss.lib.print.error('error : ' + err, client);\n        }\n    } else if(!filename) {\n        boss.lib.print.error('error: no file argument', client);\n    }\n});","owner":"root","created":1480795177929,"parent":"cmd"}},"name":"mv","parent":"cmd","owner":"root","created":1480795177928},"read":{"dirs":{},"files":{"read.js":{"data":"(function(args, client){\n\n    if(args.length > 1){\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\n        var path = result.path;\n        var filename = result.name;\n    }\n\n    if(filename){\n        try{\n            boss.lib.print.log(boss.fs.get_file(path, filename), client);\n        } catch(err){\n            boss.lib.print.error('error : ' + err, client);\n        }\n    } else if(!filename) {\n        boss.lib.print.error('error: no file argument', client);\n    }\n});","owner":"root","created":1480795177930,"parent":"cmd"}},"name":"read","parent":"cmd","owner":"root","created":1480795177929},"reload":{"dirs":{},"files":{"reload.js":{"data":"(function(args, client){\n    boss.reload();\n    boss.cmd.logout('', client);\n})","owner":"root","created":1480795177931,"parent":"cmd"}},"name":"reload","parent":"cmd","owner":"root","created":1480795177930},"rm":{"dirs":{},"files":{"rm.js":{"data":"(function(args, client){\n    if(args.length > 1){\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\n        var path = result.path;\n        var name = result.name;\n    }\n\n    if(name){\n        try{\n            boss.fs.remove(path, name, 'file', client.user);\n        } catch(err){\n            //error('error : ' + err);\n        }\n        try{boss.fs.remove(path, name, 'dir', client.user);\n        } catch(err){\n            //error('error : ' + err);\n        }\n    } else if(!name) {\n        boss.lib.print.error('error: no file/dir argument', client);\n    }\n});","owner":"root","created":1480795177931,"parent":"cmd"}},"name":"rm","parent":"cmd","owner":"root","created":1480795177931},"rmuser":{"dirs":{},"files":{"rmuser.js":{"data":"","owner":"root","created":1480795177933,"parent":"cmd"}},"name":"rmuser","parent":"cmd","owner":"root","created":1480795177932},"shell":{"dirs":{},"files":{"shell.js":{"data":"(function(args, client){\r\n    'use strict';\r\n    boss.app.shell(args, client);\r\n});","owner":"root","created":1480795177933,"parent":"cmd"}},"name":"shell","parent":"cmd","owner":"root","created":1480795177933},"write":{"dirs":{},"files":{"write.js":{"data":"(function(args, client){\n    if(args.length > 1){\n        var result = boss.lib.utils.splitPathFilename(args[1], client);\n        var path = result.path;\n        var filename = result.name;\n    }\n\n    if(filename){\n        try{\n            boss.fs.get_file(path, filename) = args[2] ? args[2] : '';\n        } catch(err){\n            try{\n                boss.fs.set_file(path, filename, args[2] ? args[2] : '', client.user);\n            } catch(err){\n                boss.lib.print.error('error : ' + err, client);\n            }\n        }\n    } else if(!filename) {\n        boss.lib.print.error('error: no file argument', client); \n    }\n});","owner":"root","created":1480795177934,"parent":"cmd"}},"name":"write","parent":"cmd","owner":"root","created":1480795177933}},"files":{},"name":"cmd","parent":"root","owner":"root","created":1480795177919},"etc":{"dirs":{},"files":{"init.js":{"data":"(function(){\r\n    'use strict';\r\n    boss.app_number = 0;\r\n});\r\n","owner":"root","created":1480795177934,"parent":"root"},"layout.js":{"data":"(function(){\r\n    'use strict';\r\n    var layoutConfig = {\r\n        content: [{\r\n            type: 'row',\r\n            content: []\r\n        }]\r\n    };\r\n    boss.layout = new GoldenLayout(layoutConfig);\r\n    boss.layout.init();\r\n});\r\n","owner":"root","created":1480795177935,"parent":"root"}},"name":"etc","parent":"root","owner":"root","created":1480795177934},"home":{"dirs":{"root":{"dirs":{"Documents":{"dirs":{},"files":{"README.txt":{"data":"Welcome to Boss\r\n\r\nMore to come later.","owner":"root","created":1480795177935,"parent":"root"}},"name":"Documents","parent":"root","owner":"root","created":1480795177935}},"files":{},"name":"root","parent":"home","owner":"root","created":1480795177935}},"files":{},"name":"home","parent":"root","owner":"root","created":1480795177935},"lib":{"dirs":{"CommandRunner":{"dirs":{},"files":{"CommandRunner.js":{"data":"(function(boss){\r\n\r\n    var execute = function(args, command, client){\r\n        if(boss.cmd[args[0]]){\r\n            boss.cmd[args[0]](args, client);\r\n        } else if(args[0] != undefined) {\r\n            boss.lib.print.error('unknown command : ' + command, client);\r\n        }\r\n    };\r\n\r\n    var parseCommand = function(args, command, client){\r\n        args.forEach(function(arg, index){\r\n            if(/\\(.+\\)/.exec(arg)){\r\n                var start = arg.indexOf('(');\r\n                var end = arg.lastIndexOf(')');\r\n                var cmd = [arg.slice(0, start)];\r\n                var newArgs = arg.slice(start + 1, end).split(' ');\r\n                newArgs = parseCommand(newArgs, cmd.join(' '), client);\r\n                cmd = cmd.concat(newArgs);\r\n                execute(cmd, command, client);\r\n                args[index] = client.text;\r\n                client.clear();\r\n            }\r\n        });\r\n        return args;\r\n    };\r\n\r\n    this.exec = (command, client) => {\r\n        if (command !== '') {\r\n            var args = command.split(' ');\r\n            args = parseCommand(args, command, client);\r\n            execute(args, command, client);\r\n            client.flush();\r\n        }\r\n    };\r\n});","owner":"root","created":1480795177937,"parent":"lib"}},"name":"CommandRunner","parent":"lib","owner":"root","created":1480795177936},"Login":{"dirs":{},"files":{"Login.js":{"data":"(function(boss){\r\n    'use strict';\r\n    var username = false;\r\n\r\n    this.username = (command, client) => {\r\n        boss.lib.set_prompt('password', client);\r\n        username = command;\r\n        client.set_mask('*');\r\n        boss.lib.push(this.password);\r\n    };\r\n\r\n    this.password = (command, client) => {\r\n        var user = boss.fs.validate_user(username, boss.lib.utils.hashCode(command));\r\n        if(user){\r\n            client.user = user;\r\n            client.cwd = '/home/' + username;\r\n\r\n            client.set_mask(false);\r\n            boss.lib.set_prompt( username, client);\r\n            boss.lib.pop();\r\n            boss.lib.push(new boss.lib.CommandRunner(boss).exec);\r\n            boss.cmd.about('', client);\r\n            boss.lib.print.log('Hello ' + username + '. Welcome to BOSS. Type [[;orange;]help] to see available commands.', client);\r\n        } else {\r\n            boss.lib.print.error('unknown username/password combination', client);\r\n            boss.lib.set_prompt('username', client);\r\n            client.set_mask(false);\r\n            boss.lib.pop();\r\n        }\r\n        client.flush();\r\n    };\r\n});","owner":"root","created":1480795177937,"parent":"lib"}},"name":"Login","parent":"lib","owner":"root","created":1480795177937},"pop":{"dirs":{},"files":{"pop.js":{"data":"(function(){\n    boss.interpreters.pop()\n})","owner":"root","created":1480795177938,"parent":"lib"}},"name":"pop","parent":"lib","owner":"root","created":1480795177937},"print":{"dirs":{},"files":{"print.js":{"data":"({\n    'log':function(txt, client){client.out(txt);},\n    'error':function(txt, client){client.out('[[;Red;]' + txt + ']');}\n});","owner":"root","created":1480795177939,"parent":"lib"}},"name":"print","parent":"lib","owner":"root","created":1480795177938},"push":{"dirs":{},"files":{"push.js":{"data":"(function(fn){\n    boss.interpreters.push(fn)\n})","owner":"root","created":1480795177941,"parent":"lib"}},"name":"push","parent":"lib","owner":"root","created":1480795177939},"set_prompt":{"dirs":{},"files":{"set_prompt.js":{"data":"(function(txt, client){\n    client.set_prompt(txt)\n})","owner":"root","created":1480795177942,"parent":"lib"}},"name":"set_prompt","parent":"lib","owner":"root","created":1480795177942},"TerminalClient":{"dirs":{},"files":{"TerminalClient.js":{"data":"(function(boss){\r\n    'use strict';\r\n    var daBoss = boss;\r\n    var terminal;\r\n\r\n    this.text = null;\r\n\r\n    this.out = (text) => {\r\n       this.text = this.text ? this.text + \"\\n\" + text : text;\r\n    };\r\n\r\n    this.flush = () => {\r\n        terminal.echo(this.text);\r\n        this.clear();\r\n    };\r\n\r\n    this.clear = () => {\r\n        this.text = null;\r\n    };\r\n\r\n    this.set_prompt = function(prompt){\r\n        terminal.set_prompt(daBoss.fs.name + ': ' + prompt + '$ ');\r\n    };\r\n\r\n    this.get_prompt = function(prompt){\r\n        return terminal.get_prompt();\r\n    };\r\n\r\n    this.set_mask = function(boolOrChar){\r\n        terminal.set_mask(boolOrChar);\r\n    };\r\n\r\n    this.exec = (command, term) => {\r\n        terminal = term;\r\n        daBoss.interpreters[daBoss.interpreters.length - 1](command, this);\r\n    };\r\n});","owner":"root","created":1480795177943,"parent":"lib"}},"name":"TerminalClient","parent":"lib","owner":"root","created":1480795177942},"utils":{"dirs":{},"files":{"utils.js":{"data":"({\r\n    calcAbsPath : (arg, args, client) => {\r\n        var path = client.cwd;\r\n        if(arg && arg.startsWith('/')){\r\n            path = arg;\r\n        } else if(arg && arg.startsWith('~')){\r\n            path = '/home/' + client.user.username + arg.slice(1);\r\n        } else if(arg && arg === '..'){\r\n            var parts = path.split('/');\r\n            parts = parts.slice(0, parts.length - 1);\r\n            path = parts.join('/');\r\n        } else if(args && args.length >= 2 && args[1]){\r\n            path += '/' + arg;\r\n        } else if(!args){\r\n            path += '/' + arg;\r\n        }\r\n        return path;\r\n    },\r\n    splitPathFilename : (full, client) => {\r\n        var path = client.cwd;\r\n        var name = full;\r\n        var parts = full.split('/');\r\n        if(parts.length > 1){\r\n            name = parts.pop();\r\n            path = boss.lib.utils.calcAbsPath(parts.join('/'), null, client);\r\n        }\r\n        return {\r\n            path: path,\r\n            name: name\r\n        }\r\n    },\r\n    //credit: http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\r\n    hashCode : (string) => {\r\n        var hash = 0;\r\n        if(string.length == 0){\r\n            return hash;\r\n        }\r\n\r\n        for(var i = 0; i < string.length; i++) {\r\n            var char = string.charCodeAt(i);\r\n            var hash = ((hash<<5)-hash)+char;\r\n            hash = hash & hash; // Convert to 32bit integer\r\n        }\r\n        return hash;\r\n    }\r\n})\r\n","owner":"root","created":1480795177944,"parent":"lib"}},"name":"utils","parent":"lib","owner":"root","created":1480795177943}},"files":{},"name":"lib","parent":"root","owner":"root","created":1480795177936},"sys":{"dirs":{},"files":{"FileSystem.js":{"data":"(function FileSystem(root, name, env){\r\n    'use strict';\r\n\r\n    //SYSTEM NAME\r\n    this.name = name;\r\n\r\n    //VARS\r\n    var _root = root;\r\n    _root.users = JSON.parse(_root.dirs['var'].files[env +'-users.json'].data);\r\n\r\n    //CLASSES\r\n    this.Dir = function(name, owner, parent){\r\n        this.name = name;\r\n        this.owner = owner;\r\n        this.parent = parent;\r\n        this.created = Date.now();\r\n        this.dirs = {};\r\n        this.files = {};\r\n    };\r\n\r\n    this.File = function(owner, data, meta){\r\n        this.owner = owner;\r\n        this.created = Date.now();\r\n        this.data = data;\r\n        this.meta = meta;\r\n    };\r\n\r\n    this.User = function(username, type, password){\r\n        this.username = username;\r\n        this.type = type;\r\n        this.password = password;\r\n    };\r\n\r\n    //FUNCTIONS\r\n    var get_dir = (path) => {\r\n        var parts = path.split('/');\r\n        var directory = _root;\r\n\r\n        for(var i = 1; i < parts.length; i++){\r\n            if(parts[i] !== ''){\r\n                directory = directory.dirs[parts[i]];\r\n            }\r\n        }\r\n        return directory;\r\n    }\r\n\r\n    /**\r\n     * The fileSystem permissions system is very simple.\r\n     * If, you are a root user you can do anything. If you\r\n     * are a regular user you can read all files (it's js so\r\n     * really this can't be hidden so why fake it) but can't\r\n     * write on other users files/dirs\r\n     */\r\n    var validate = (object, user) => {\r\n        if(user.type !== 'root' &&\r\n           user.username !== object.owner &&\r\n           !this.validate_user(user.username, user.password)){\r\n            throw Error('You are not permitted to execute this action');\r\n        }\r\n    };\r\n\r\n    //METHODS\r\n    this.get_file = (path, filename) => {\r\n        if(get_dir(path).files[filename]){\r\n            var file = get_dir(path).files[filename];\r\n            return get_dir(path).files[filename].data;\r\n        } else {\r\n            throw filename + 'does not exist';\r\n        }\r\n    }\r\n\r\n    this.set_file = (path, filename, data, user) => {\r\n        var dir = get_dir(path);\r\n        validate(dir, user);\r\n        dir.files[filename] = new this.File(this.get_current_username, data, null);\r\n    }\r\n\r\n    this.set_dir = (path, dirname, user) => { \r\n        if(!get_dir(path).dirs[dirname]){\r\n            var dir = get_dir(path);\r\n            validate(dir, user);\r\n            dir.dirs[dirname] = new this.Dir(dirname, user ? user.username : this.get_current_username(), path);\r\n        } else {\r\n            throw 'dir already exists';\r\n        }\r\n    }\r\n\r\n    this.remove = (path, name, type, user) => {\r\n        if(type === 'file' && get_dir(path).files[name]){\r\n            var dir = get_dir(path);\r\n            validate(dir, user);\r\n            delete dir.files[name];\r\n        } else if( type === 'dir' && get_dir(path).dirs[name] ){\r\n            var dir = get_dir(path);\r\n            validate(dir);\r\n            delete dir.dirs[name];\r\n        } else {\r\n            throw 'error : does not exist';\r\n        }\r\n    }\r\n\r\n    //get directory and file listing\r\n    this.get_contents = path => {\r\n        var directory = get_dir(path);\r\n        var dirs = directory.dirs;\r\n        var files = directory.files;\r\n        return Object.keys(dirs).concat(Object.keys(files));\r\n    }\r\n\r\n    //get file listing\r\n    this.get_files = path => {\r\n        var directory = get_dir(path);\r\n        var files = directory.files;\r\n        return Object.keys(files);\r\n    }\r\n\r\n    //get dir listing\r\n    this.get_dirs = path => {\r\n        var directory = get_dir(path);\r\n        var dirs = directory.dirs;\r\n        return Object.keys(dirs);\r\n    }\r\n\r\n    //USER\r\n    this.add_user = (key, user) => {\r\n        _root.users[key] = user;\r\n        this.set_dir('/home', key, user);\r\n    }\r\n\r\n    this.remove_user = (key, user) => {\r\n       //TODO\r\n    }\r\n\r\n    this.validate_user = (name, pass) => {\r\n        if(_root.users[name] && _root.users[name].password == pass){\r\n            return _root.users[name];\r\n        }\r\n        return false;\r\n    };\r\n\r\n    //return root\r\n    this.export = () => {\r\n        return _root;\r\n    }\r\n})","owner":"root","created":1480795177944,"parent":"root"}},"name":"sys","parent":"root","owner":"root","created":1480795177944},"var":{"dirs":{},"files":{"prod-users.json":{"data":"{\"root\":{\"username\":\"root\",\"type\":\"root\",\"password\":\"3433489\"}}","owner":"root","created":1480795177945,"parent":"root"},"test-users.json":{"data":"{\"test\":{\"username\":\"test\",\"type\":\"root\",\"password\":\"3556498\"}}","owner":"root","created":1480795177945,"parent":"root"}},"name":"var","parent":"root","owner":"root","created":1480795177944}},"files":{},"name":"root","parent":null,"owner":"root","created":1480795177915}